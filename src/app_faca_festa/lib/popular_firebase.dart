// ignore_for_file: unused_element

import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';
import 'package:uuid/uuid.dart';

import './data/models/model.dart';

final _uuid = Uuid();
final _db = FirebaseFirestore.instance;

/// Executa a carga de dados iniciais no Firestore
Future<void> popularFirebase() async {
  //await _inserirTiposDeEvento();
  //await _inserirEstadosECidades();
  //await _inserirInspiracoes();
  //await inserirPostsComunidade();
}

Future<void> _inserirTiposDeEvento() async {
  final tipos = [
    {'nome': 'Casamento', 'emoji': 'üíç', 'cor': Colors.pinkAccent},
    {'nome': 'Festa Infantil', 'emoji': 'üéà', 'cor': Colors.orangeAccent},
    {'nome': 'Ch√° de Beb√™', 'emoji': 'üçº', 'cor': Colors.lightBlueAccent},
    {'nome': 'Anivers√°rio', 'emoji': 'üéÇ', 'cor': Colors.purpleAccent},
  ];

  for (var tipo in tipos) {
    final model = TipoEventoModel(
      idTipoEvento: _uuid.v4(),
      nome: '${tipo['emoji']} ${tipo['nome']}',
    );
    await _db.collection('tipo_evento').doc(model.idTipoEvento).set(model.toMap());
  }
}

Future<void> inserirPostsComunidade() async {
  final posts = [
    {
      'autor': 'Ana Lima',
      'texto':
          'Decora√ß√£o r√∫stica para casamento ao ar livre üåø‚ú®\nUsei tons de verde, madeira natural e flores do campo. Super rom√¢ntico e econ√¥mico!',
      'imagem': 'https://images.unsplash.com/photo-1521334884684-d80222895322',
      'curtidas': 48,
      'data': Timestamp.now(),
    },
    {
      'autor': 'Pedro Santos',
      'texto':
          'Top 5 lembrancinhas sustent√°veis üéÅüå±\n1Ô∏è‚É£ Suculentas em potinhos reciclados\n2Ô∏è‚É£ Velas artesanais naturais\n3Ô∏è‚É£ Docinhos org√¢nicos\n4Ô∏è‚É£ Sabonetes caseiros\n5Ô∏è‚É£ Mini temperos plant√°veis',
      'imagem': 'https://images.unsplash.com/photo-1504208434309-cb69f4fe52b0',
      'curtidas': 76,
      'data': Timestamp.now(),
    },
    {
      'autor': 'Marina Costa',
      'texto':
          'Fiz meu ch√° de beb√™ com o tema ‚ÄúUrsinhos no Bosque‚Äù üß∏üå≤üíõ\nA decora√ß√£o foi toda feita √† m√£o! As m√£es amaram as lembrancinhas personalizadas.',
      'imagem': 'https://images.unsplash.com/photo-1615461066841-6116e6f6d1b0',
      'curtidas': 63,
      'data': Timestamp.now(),
    },
    {
      'autor': 'Lucas Oliveira',
      'texto':
          'üéâ Dica de som para festas pequenas: uma playlist com batidas leves e pop nacional funciona super bem.\nEvite caixas muito potentes para n√£o distorcer o som!',
      'imagem': 'https://images.unsplash.com/photo-1508214751196-bcfd4ca60f91',
      'curtidas': 22,
      'data': Timestamp.now(),
    },
    {
      'autor': 'Carla Mendes',
      'texto':
          'üíê Arranjos simples e baratos para festas de anivers√°rio!\nUse garrafas de vidro e flores secas ‚Äî o resultado √© lindo e minimalista.',
      'imagem': 'https://images.unsplash.com/photo-1587270613304-4f1b46e07c4e',
      'curtidas': 89,
      'data': Timestamp.now(),
    },
  ];

  final db = FirebaseFirestore.instance;
  final batch = db.batch();

  for (final p in posts) {
    final docRef = db.collection('posts').doc();
    batch.set(docRef, p);
  }

  await batch.commit();
}

Future<void> _inserirInspiracoes() async {
  final inspiracoes = [
    {
      'tipoEvento': 'casamento',
      'titulo': 'Casamento ao p√¥r do sol na praia',
      'descricao':
          'Cerim√¥nia intimista em tons de areia e azul, com decora√ß√£o r√∫stica chique e trilha sonora ac√∫stica. Ideal para casais que buscam leveza e contato com a natureza.',
      'imagemUrl': 'https://images.unsplash.com/photo-1529626455594-4ff0802cfb7e',
      'tags': ['praia', 'r√∫stico', 'rom√¢ntico', 'p√¥r do sol', 'boho']
    },
    {
      'tipoEvento': 'casamento',
      'titulo': 'Casamento cl√°ssico em sal√£o',
      'descricao':
          'Decora√ß√£o elegante com flores brancas, lustres e tons dourados. Indicado para cerim√¥nias tradicionais e sofisticadas.',
      'imagemUrl': 'https://images.unsplash.com/photo-1524492412937-4961d66aa114',
      'tags': ['cl√°ssico', 'luxo', 'flores brancas', 'dourado']
    },
    {
      'tipoEvento': 'aniversario',
      'titulo': 'Festa infantil tema ‚ÄúSelva Encantada‚Äù',
      'descricao':
          'Festa colorida e cheia de bichinhos da floresta, ideal para crian√ßas de 3 a 7 anos. Docinhos personalizados e √°rea de recrea√ß√£o tem√°tica.',
      'imagemUrl': 'https://images.unsplash.com/photo-1565958011705-44e211c8e8c1',
      'tags': ['infantil', 'selva', 'animal', 'colorido', 'divers√£o']
    },
    {
      'tipoEvento': 'aniversario',
      'titulo': 'Anivers√°rio adulto ‚ÄúNoite do Vinho‚Äù',
      'descricao':
          'Celebra√ß√£o sofisticada com mesa de frios, ilumina√ß√£o aconchegante e degusta√ß√£o de vinhos. Ideal para grupos pequenos.',
      'imagemUrl': 'https://images.unsplash.com/photo-1510626176961-4b37d6af9142',
      'tags': ['adulto', 'vinho', 'aconchegante', 'amigos']
    },
    {
      'tipoEvento': 'cha de bebe',
      'titulo': 'Ch√° de beb√™ tema ‚ÄúUrsinhos e Nuvens‚Äù',
      'descricao':
          'Decora√ß√£o em tons de azul beb√™ e branco, com bal√µes, ursos e docinhos personalizados. Ideal para recep√ß√µes leves e delicadas.',
      'imagemUrl': 'https://images.unsplash.com/photo-1612197527762-9ff5e4d9a3d5',
      'tags': ['beb√™', 'ursinho', 'azul', 'delicado']
    },
    {
      'tipoEvento': 'cha de bebe',
      'titulo': 'Ch√° revela√ß√£o ‚ÄúMenino ou Menina?‚Äù',
      'descricao':
          'Decora√ß√£o em rosa e azul, com suspense no momento da revela√ß√£o. Pode ser feito em casa ou em espa√ßo ao ar livre.',
      'imagemUrl': 'https://images.unsplash.com/photo-1601987077973-55f0b1f61d0f',
      'tags': ['revela√ß√£o', 'rosa', 'azul', 'bal√µes']
    },
    {
      'tipoEvento': 'natal',
      'titulo': 'Ceia de Natal r√∫stica e acolhedora',
      'descricao':
          'Mesa de jantar com pinhas, velas e tons de vermelho e verde. Sugest√£o de card√°pio simples e decora√ß√£o DIY.',
      'imagemUrl': 'https://images.unsplash.com/photo-1607083201043-548c6d8a49c3',
      'tags': ['natal', 'r√∫stico', 'velas', 'vermelho', 'verde']
    },
    {
      'tipoEvento': 'ano novo',
      'titulo': 'R√©veillon branco e dourado',
      'descricao':
          'Decora√ß√£o clean com luzes e glitter, ideal para celebrar a virada com estilo. Drinks tropicais e playlist animada.',
      'imagemUrl': 'https://images.unsplash.com/photo-1549923746-c502d488b3ea',
      'tags': ['ano novo', 'branco', 'dourado', 'festa']
    },
    {
      'tipoEvento': 'noivado',
      'titulo': 'Noivado rom√¢ntico ao ar livre',
      'descricao':
          'Mesa de doces, letreiro luminoso ‚ÄúLove‚Äù e flores do campo. Perfeito para fotos incr√≠veis e clima afetivo.',
      'imagemUrl': 'https://images.unsplash.com/photo-1526045612212-70caf35c14df',
      'tags': ['noivado', 'rom√¢ntico', 'flores', 'ao ar livre']
    },
    {
      'tipoEvento': 'formatura',
      'titulo': 'Formatura estilo black & gold',
      'descricao':
          'Celebra√ß√£o com DJ, pista de dan√ßa e decora√ß√£o moderna em preto e dourado. Ideal para festas jovens e cheias de energia.',
      'imagemUrl': 'https://images.unsplash.com/photo-1541417904950-b855846fe074',
      'tags': ['formatura', 'moderno', 'preto', 'dourado', 'festa']
    },
    {
      'tipoEvento': 'batizado',
      'titulo': 'Batizado em branco e verde oliva',
      'descricao':
          'Decora√ß√£o minimalista e elegante, com flores brancas e folhagens. Mesa de doces suave e elegante.',
      'imagemUrl': 'https://images.unsplash.com/photo-1616628188935-2e8e3f40e091',
      'tags': ['batizado', 'branco', 'folhas', 'minimalista']
    },
    {
      'tipoEvento': 'cha de cozinha',
      'titulo': 'Ch√° de cozinha retr√¥',
      'descricao':
          'Decora√ß√£o vintage com utens√≠lios antigos, toalhas xadrez e docinhos caseiros. Ideal para eventos descontra√≠dos e afetivos.',
      'imagemUrl': 'https://images.unsplash.com/photo-1600718379933-d14c61a1e27d',
      'tags': ['retr√¥', 'cozinha', 'vintage', 'afetivo']
    },
  ];

  for (var item in inspiracoes) {
    final model = InspiracaoModel(
      id: _uuid.v4(),
      tipoEvento: item['tipoEvento'] as String,
      titulo: item['titulo'] as String,
      descricao: item['descricao'] as String,
      imagemUrl: item['imagemUrl'] as String,
      tags: List<String>.from(item['tags'] as List),
    );

    await _db.collection('inspiracoes').doc(model.id).set(model.toFirestore());
  }

  debugPrint('‚úÖ Inspira√ß√µes inseridas com sucesso!');
}

Future<void> _inserirEstadosECidades() async {
  final estados = [
    {'uf': 'AC', 'nome': 'Acre'},
    {'uf': 'AL', 'nome': 'Alagoas'},
    {'uf': 'AP', 'nome': 'Amap√°'},
    {'uf': 'AM', 'nome': 'Amazonas'},
    {'uf': 'BA', 'nome': 'Bahia'},
    {'uf': 'CE', 'nome': 'Cear√°'},
    {'uf': 'DF', 'nome': 'Distrito Federal'},
    {'uf': 'ES', 'nome': 'Esp√≠rito Santo'},
    {'uf': 'GO', 'nome': 'Goi√°s'},
    {'uf': 'MA', 'nome': 'Maranh√£o'},
    {'uf': 'MT', 'nome': 'Mato Grosso'},
    {'uf': 'MS', 'nome': 'Mato Grosso do Sul'},
    {'uf': 'MG', 'nome': 'Minas Gerais'},
    {'uf': 'PA', 'nome': 'Par√°'},
    {'uf': 'PB', 'nome': 'Para√≠ba'},
    {'uf': 'PR', 'nome': 'Paran√°'},
    {'uf': 'PE', 'nome': 'Pernambuco'},
    {'uf': 'PI', 'nome': 'Piau√≠'},
    {'uf': 'RJ', 'nome': 'Rio de Janeiro'},
    {'uf': 'RN', 'nome': 'Rio Grande do Norte'},
    {'uf': 'RS', 'nome': 'Rio Grande do Sul'},
    {'uf': 'RO', 'nome': 'Rond√¥nia'},
    {'uf': 'RR', 'nome': 'Roraima'},
    {'uf': 'SC', 'nome': 'Santa Catarina'},
    {'uf': 'SP', 'nome': 'S√£o Paulo'},
    {'uf': 'SE', 'nome': 'Sergipe'},
    {'uf': 'TO', 'nome': 'Tocantins'},
  ];

  final cidadesPorEstado = {
    'AC': ['Rio Branco', 'Cruzeiro do Sul', 'Sena Madureira'],
    'AL': ['Macei√≥', 'Arapiraca', 'Palmeira dos √çndios'],
    'AP': ['Macap√°', 'Santana', 'Laranjal do Jari'],
    'AM': ['Manaus', 'Parintins', 'Itacoatiara', 'Manacapuru'],
    'BA': ['Salvador', 'Feira de Santana', 'Vit√≥ria da Conquista', 'Itabuna', 'Ilh√©us'],
    'CE': ['Fortaleza', 'Caucaia', 'Juazeiro do Norte', 'Sobral', 'Maracana√∫'],
    'DF': ['Bras√≠lia', 'Taguatinga', 'Ceil√¢ndia', 'Gama', 'Planaltina'],
    'ES': ['Vit√≥ria', 'Vila Velha', 'Serra', 'Cariacica', 'Linhares'],
    'GO': ['Goi√¢nia', 'Aparecida de Goi√¢nia', 'An√°polis', 'Rio Verde', 'Luzi√¢nia'],
    'MA': ['S√£o Lu√≠s', 'Imperatriz', 'Caxias', 'Timon', 'Bacabal'],
    'MT': ['Cuiab√°', 'V√°rzea Grande', 'Rondon√≥polis', 'Sinop', 'Tangar√° da Serra'],
    'MS': ['Campo Grande', 'Dourados', 'Tr√™s Lagoas', 'Corumb√°', 'Ponta Por√£'],
    'MG': ['Belo Horizonte', 'Uberl√¢ndia', 'Juiz de Fora', 'Montes Claros', 'Contagem'],
    'PA': ['Bel√©m', 'Ananindeua', 'Santar√©m', 'Marab√°', 'Castanhal'],
    'PB': ['Jo√£o Pessoa', 'Campina Grande', 'Patos', 'Sousa', 'Cajazeiras'],
    'PR': ['Curitiba', 'Londrina', 'Maring√°', 'Ponta Grossa', 'Cascavel', 'Foz do Igua√ßu'],
    'PE': ['Recife', 'Olinda', 'Caruaru', 'Petrolina', 'Garanhuns', 'Jaboat√£o dos Guararapes'],
    'PI': ['Teresina', 'Parna√≠ba', 'Picos', 'Floriano'],
    'RJ': ['Rio de Janeiro', 'Niter√≥i', 'Petr√≥polis', 'Volta Redonda', 'Campos dos Goytacazes'],
    'RN': ['Natal', 'Mossor√≥', 'Caic√≥', 'Parnamirim'],
    'RS': ['Porto Alegre', 'Caxias do Sul', 'Pelotas', 'Santa Maria', 'Passo Fundo'],
    'RO': ['Porto Velho', 'Ji-Paran√°', 'Ariquemes', 'Vilhena', 'Cacoal'],
    'RR': ['Boa Vista', 'Rorain√≥polis', 'Caracara√≠'],
    'SC': ['Florian√≥polis', 'Joinville', 'Blumenau', 'Chapec√≥', 'Crici√∫ma'],
    'SP': ['S√£o Paulo', 'Campinas', 'Santos', 'Sorocaba', 'Ribeir√£o Preto', 'S√£o Jos√© dos Campos'],
    'SE': ['Aracaju', 'Nossa Senhora do Socorro', 'Lagarto', 'Itabaiana'],
    'TO': ['Palmas', 'Aragua√≠na', 'Gurupi', 'Porto Nacional'],
  };

  for (var estado in estados) {
    final idUf = _uuid.v4();
    final estadoModel = EstadoModel(
      idUf: idUf,
      uf: estado['uf']!,
      nome: estado['nome']!,
    );

    // üîπ Grava o estado
    await _db.collection('estado').doc(idUf).set(estadoModel.toMap());

    // üîπ Insere cidades se existirem
    if (cidadesPorEstado.containsKey(estado['uf'])) {
      final cidades = cidadesPorEstado[estado['uf']]!;
      for (var i = 0; i < cidades.length; i++) {
        final cidadeModel = CidadeModel(
          idCidade: i + 1,
          uf: estado['uf']!,
          nome: cidades[i],
          estado: estadoModel,
        );

        await _db.collection('estado').doc(idUf).collection('cidades').add(cidadeModel.toMap());
      }
    }
  }

  debugPrint('‚úÖ Estados e cidades inseridos com sucesso!');
}
